package ecologylab.bigsemantics.generated.library.creativeWork.collaborative;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2016) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.creativeWork.collaborative.Issue;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.builtins.RichDocument;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class IssuePage extends RichDocument
{
	@simpl_collection("issue")
	@mm_name("issues")
	private List<Issue> issues;

	public IssuePage()
	{ super(); }

	public IssuePage(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<Issue> getIssues()
	{
		return issues;
	}

  // lazy evaluation:
  public List<Issue> issues()
  {
    if (issues == null)
      issues = new ArrayList<Issue>();
    return issues;
  }

  // addTo:
  public void addToIssues(Issue element)
  {
    issues().add(element);
  }

  // size:
  public int issuesSize()
  {
    return issues == null ? 0 : issues.size();
  }

	public void setIssues(List<Issue> issues)
	{
		this.issues = issues;
	}
}
