package ecologylab.bigsemantics.generated.library.ieeeAuthor;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2014) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.author.Author;
import ecologylab.bigsemantics.metadata.builtins.CompoundDocument;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
public class IeeeAuthorPage extends Author
{
	@simpl_collection("compound_document")
	@mm_name("authors")
	private List<CompoundDocument> authors;

	public IeeeAuthorPage()
	{ super(); }

	public IeeeAuthorPage(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<CompoundDocument> getAuthors()
	{
		return authors;
	}

  // lazy evaluation:
  public List<CompoundDocument> authors()
  {
    if (authors == null)
      authors = new ArrayList<CompoundDocument>();
    return authors;
  }

  // addTo:
  public void addToAuthors(CompoundDocument element)
  {
    authors().add(element);
  }

  // size:
  public int authorsSize()
  {
    return authors == null ? 0 : authors.size();
  }

	public void setAuthors(List<CompoundDocument> authors)
	{
		this.authors = authors;
	}
}
