package ecologylab.bigsemantics.generated.library.fashion;

/**
 * Automatically generated by MetaMetadataJavaTranslator
 *
 * DO NOT modify this code manually: All your changes may get lost!
 *
 * Copyright (2014) Interface Ecology Lab.
 */

import ecologylab.bigsemantics.generated.library.product_and_service.Product;
import ecologylab.bigsemantics.metadata.builtins.CompoundDocument;
import ecologylab.bigsemantics.metadata.builtins.MetadataBuiltinsTypesScope;
import ecologylab.bigsemantics.metadata.mm_name;
import ecologylab.bigsemantics.metametadata.MetaMetadataCompositeField;
import ecologylab.bigsemantics.namesandnums.SemanticsNames;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_tag;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@simpl_inherit
@simpl_tag("forever_21")
public class Forever21 extends Product
{
	@simpl_collection("compound_document")
	@mm_name("available_colors")
	private List<CompoundDocument> availableColors;

	public Forever21()
	{ super(); }

	public Forever21(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<CompoundDocument> getAvailableColors()
	{
		return availableColors;
	}

  // lazy evaluation:
  public List<CompoundDocument> availableColors()
  {
    if (availableColors == null)
      availableColors = new ArrayList<CompoundDocument>();
    return availableColors;
  }

  // addTo:
  public void addToAvailableColors(CompoundDocument element)
  {
    availableColors().add(element);
  }

  // size:
  public int availableColorsSize()
  {
    return availableColors == null ? 0 : availableColors.size();
  }

	public void setAvailableColors(List<CompoundDocument> availableColors)
	{
		this.availableColors = availableColors;
	}
}
