//
// ResearchGateInstitution.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.ResearchgateArticleNS;
using Ecologylab.Semantics.Generated.Library.ResearchgateAuthorNS;
using Ecologylab.Semantics.Generated.Library.ResearchgateInstitutionDepartmentNS;
using Ecologylab.Semantics.Generated.Library.ResearchgateInstitutionNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.ResearchgateInstitutionNS 
{
	[SimplInherit]
	public class ResearchGateInstitution : RichDocument
	{
		[SimplScalar]
		private MetadataString institutionHead;

		[SimplCollection("research_gate_article")]
		[MmName("top_publications")]
		private List<ResearchGateArticle> topPublications;

		[SimplCollection("research_gate_institution_department")]
		[MmName("top_departments")]
		private List<ResearchGateInstitutionDepartment> topDepartments;

		[SimplCollection("research_gate_institution")]
		[MmName("top_collaborators")]
		private List<ResearchGateInstitution> topCollaborators;

		[SimplCollection("research_gate_author")]
		[MmName("top_members")]
		private List<ResearchGateAuthor> topMembers;

		[SimplComposite]
		[MmName("contact_info")]
		private ResearchGateInstitutionContactInfo contactInfo;

		[SimplComposite]
		[MmName("website")]
		private RichDocument website;

		[SimplComposite]
		[MmName("stats")]
		private ResearchGateStats stats;

		public ResearchGateInstitution()
		{ }

		public ResearchGateInstitution(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString InstitutionHead
		{
			get{return institutionHead;}
			set
			{
				if (this.institutionHead != value)
				{
					this.institutionHead = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<ResearchGateArticle> TopPublications
		{
			get{return topPublications;}
			set
			{
				if (this.topPublications != value)
				{
					this.topPublications = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<ResearchGateInstitutionDepartment> TopDepartments
		{
			get{return topDepartments;}
			set
			{
				if (this.topDepartments != value)
				{
					this.topDepartments = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<ResearchGateInstitution> TopCollaborators
		{
			get{return topCollaborators;}
			set
			{
				if (this.topCollaborators != value)
				{
					this.topCollaborators = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<ResearchGateAuthor> TopMembers
		{
			get{return topMembers;}
			set
			{
				if (this.topMembers != value)
				{
					this.topMembers = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public ResearchGateInstitutionContactInfo ContactInfo
		{
			get{return contactInfo;}
			set
			{
				if (this.contactInfo != value)
				{
					this.contactInfo = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public RichDocument Website
		{
			get{return website;}
			set
			{
				if (this.website != value)
				{
					this.website = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public ResearchGateStats Stats
		{
			get{return stats;}
			set
			{
				if (this.stats != value)
				{
					this.stats = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
