//
// RecordMetaMetadata.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.BigSemantics.Generated.Library;
using Ecologylab.BigSemantics.MetaMetadataNS;
using Ecologylab.BigSemantics.MetadataNS;
using Ecologylab.BigSemantics.MetadataNS.Builtins;
using Ecologylab.BigSemantics.MetadataNS.Scalar;
using Ecologylab.Collections;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.BigSemantics.Generated.Library 
{
	[SimplInherit]
	public class RecordMetaMetadata : Metadata
	{
		[SimplComposite]
		[MmName("date_info")]
		private DateInfo dateInfo;

		[SimplCollection("catalog")]
		[MmName("catalogs")]
		private List<Ecologylab.BigSemantics.MetadataNS.Scalar.MetadataString> catalogs;

		public RecordMetaMetadata()
		{ }

		public RecordMetaMetadata(MetaMetadataCompositeField mmd) : base(mmd) { }


		public DateInfo DateInfo
		{
			get{return dateInfo;}
			set
			{
				if (this.dateInfo != value)
				{
					this.dateInfo = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Ecologylab.BigSemantics.MetadataNS.Scalar.MetadataString> Catalogs
		{
			get{return catalogs;}
			set
			{
				if (this.catalogs != value)
				{
					this.catalogs = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
