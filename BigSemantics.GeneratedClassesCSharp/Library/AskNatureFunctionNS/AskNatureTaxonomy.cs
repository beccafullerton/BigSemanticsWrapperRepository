//
// AskNatureTaxonomy.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.AskNatureFunctionNS;
using Ecologylab.Semantics.Generated.Library.AskNatureGroupNS;
using Ecologylab.Semantics.Generated.Library.AskNatureSubgroupNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.AskNatureFunctionNS 
{
	[SimplInherit]
	public class AskNatureTaxonomy : RichDocument
	{
		[SimplComposite]
		[MmName("group")]
		private AskNatureGroup group;

		[SimplComposite]
		[MmName("subgroup")]
		private AskNatureSubgroup subgroup;

		[SimplComposite]
		[MmName("function")]
		private AskNatureFunction function;

		public AskNatureTaxonomy()
		{ }

		public AskNatureTaxonomy(MetaMetadataCompositeField mmd) : base(mmd) { }


		public AskNatureGroup Group
		{
			get{return group;}
			set
			{
				if (this.group != value)
				{
					this.group = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public AskNatureSubgroup Subgroup
		{
			get{return subgroup;}
			set
			{
				if (this.subgroup != value)
				{
					this.subgroup = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public AskNatureFunction Function
		{
			get{return function;}
			set
			{
				if (this.function != value)
				{
					this.function = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
