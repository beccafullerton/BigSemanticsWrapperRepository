//
// General.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.DleseRecordNS 
{
	[SimplInherit]
	public class General : Metadata
	{
		[SimplScalar]
		private MetadataString title;

		[SimplCollection("subject")]
		[MmName("subjects")]
		private List<Ecologylab.Semantics.MetadataNS.Scalar.MetadataString> subjects;

		[SimplScalar]
		private MetadataString description;

		[SimplScalar]
		private MetadataString language;

		public General()
		{ }

		public General(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString Title
		{
			get{return title;}
			set
			{
				if (this.title != value)
				{
					this.title = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Ecologylab.Semantics.MetadataNS.Scalar.MetadataString> Subjects
		{
			get{return subjects;}
			set
			{
				if (this.subjects != value)
				{
					this.subjects = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Description
		{
			get{return description;}
			set
			{
				if (this.description != value)
				{
					this.description = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Language
		{
			get{return language;}
			set
			{
				if (this.language != value)
				{
					this.language = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
