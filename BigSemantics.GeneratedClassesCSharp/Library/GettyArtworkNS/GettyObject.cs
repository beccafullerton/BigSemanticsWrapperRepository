//
// GettyObject.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.ArtworkNS;
using Ecologylab.Semantics.Generated.Library.GetttyArtistNS;
using Ecologylab.Semantics.Generated.Library.GettyArtworkNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.GettyArtworkNS 
{
	[SimplInherit]
	public class GettyObject : Artwork
	{
		[SimplCollection("getty_artist")]
		[MmName("artist")]
		private List<GettyArtist> artist;

		[SimplComposite]
		[MmName("image")]
		private Image image;

		[SimplComposite]
		[MmName("work_info")]
		private GettyWorkInfo workInfo;

		public GettyObject()
		{ }

		public GettyObject(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<GettyArtist> Artist
		{
			get{return artist;}
			set
			{
				if (this.artist != value)
				{
					this.artist = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public Image Image
		{
			get{return image;}
			set
			{
				if (this.image != value)
				{
					this.image = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public GettyWorkInfo WorkInfo
		{
			get{return workInfo;}
			set
			{
				if (this.workInfo != value)
				{
					this.workInfo = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
