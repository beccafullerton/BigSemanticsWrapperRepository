//
// ItemRecord.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.DleseNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Fundamental.Generic;
using Simpl.Fundamental.Net;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.DleseNS 
{
	[SimplInherit]
	public class ItemRecord : Metadata
	{
		[SimplComposite]
		[MmName("record_meta_metadata")]
		private RecordMetaMetadata recordMetaMetadata;

		[SimplScalar]
		[SimplOtherTags(new String[] {"xsi:schemaLocation"})]
		private MetadataParsedURL location;

		[SimplComposite]
		[MmName("lifecycle")]
		private Lifecycle lifecycle;

		[SimplComposite]
		[MmName("educational")]
		private Educational educational;

		[SimplComposite]
		[MmName("general")]
		private General general;

		public ItemRecord()
		{ }

		public ItemRecord(MetaMetadataCompositeField mmd) : base(mmd) { }


		public RecordMetaMetadata RecordMetaMetadata
		{
			get{return recordMetaMetadata;}
			set
			{
				if (this.recordMetaMetadata != value)
				{
					this.recordMetaMetadata = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataParsedURL Location
		{
			get{return location;}
			set
			{
				if (this.location != value)
				{
					this.location = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public Lifecycle Lifecycle
		{
			get{return lifecycle;}
			set
			{
				if (this.lifecycle != value)
				{
					this.lifecycle = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public Educational Educational
		{
			get{return educational;}
			set
			{
				if (this.educational != value)
				{
					this.educational = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public General General
		{
			get{return general;}
			set
			{
				if (this.general != value)
				{
					this.general = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
