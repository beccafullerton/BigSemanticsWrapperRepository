//
// Educational.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.DleseNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.DleseNS 
{
	[SimplInherit]
	public class Educational : Metadata
	{
		[SimplCollection("audience")]
		[MmName("audiences")]
		private List<Audience> audiences;

		[SimplCollection("resource_type")]
		[MmName("resource_types")]
		private List<Ecologylab.Semantics.MetadataNS.Scalar.MetadataString> resourceTypes;

		public Educational()
		{ }

		public Educational(MetaMetadataCompositeField mmd) : base(mmd) { }


		public List<Audience> Audiences
		{
			get{return audiences;}
			set
			{
				if (this.audiences != value)
				{
					this.audiences = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Ecologylab.Semantics.MetadataNS.Scalar.MetadataString> ResourceTypes
		{
			get{return resourceTypes;}
			set
			{
				if (this.resourceTypes != value)
				{
					this.resourceTypes = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
