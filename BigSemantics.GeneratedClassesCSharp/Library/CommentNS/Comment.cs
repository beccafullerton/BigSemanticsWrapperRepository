//
// Comment.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.PersonNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.CommentNS 
{
	[SimplInherit]
	public class Comment : RichDocument
	{
		[SimplComposite]
		[MmName("author")]
		private Person author;

		/// <summary>
		/// How long this comment has been there.
		/// </summary>
		[SimplScalar]
		private MetadataString time;

		/// <summary>
		/// How many votes this comment has got.
		/// </summary>
		[SimplScalar]
		private MetadataInteger count;

		public Comment()
		{ }

		public Comment(MetaMetadataCompositeField mmd) : base(mmd) { }


		public Person Author
		{
			get{return author;}
			set
			{
				if (this.author != value)
				{
					this.author = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Time
		{
			get{return time;}
			set
			{
				if (this.time != value)
				{
					this.time = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataInteger Count
		{
			get{return count;}
			set
			{
				if (this.count != value)
				{
					this.count = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
