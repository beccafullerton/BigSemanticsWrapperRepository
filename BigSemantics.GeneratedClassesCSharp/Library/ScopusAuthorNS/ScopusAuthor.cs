//
// ScopusAuthor.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.AuthorNS;
using Ecologylab.Semantics.Generated.Library.ScopusSearchNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.ScopusAuthorNS 
{
	[SimplInherit]
	public class ScopusAuthor : Author
	{
		[SimplScalar]
		private MetadataString scopusAuthorId;

		[SimplComposite]
		[MmName("articles_by_author_page")]
		private ScopusSearch articlesByAuthorPage;

		public ScopusAuthor()
		{ }

		public ScopusAuthor(MetaMetadataCompositeField mmd) : base(mmd) { }


		public MetadataString ScopusAuthorId
		{
			get{return scopusAuthorId;}
			set
			{
				if (this.scopusAuthorId != value)
				{
					this.scopusAuthorId = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public ScopusSearch ArticlesByAuthorPage
		{
			get{return articlesByAuthorPage;}
			set
			{
				if (this.articlesByAuthorPage != value)
				{
					this.articlesByAuthorPage = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
