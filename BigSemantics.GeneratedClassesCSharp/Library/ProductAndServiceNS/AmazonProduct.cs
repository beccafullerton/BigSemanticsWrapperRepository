//
// AmazonProduct.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.ProductAndServiceNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.ProductAndServiceNS 
{
	[SimplInherit]
	public class AmazonProduct : Product
	{
		[SimplComposite]
		[MmName("department")]
		private CompoundDocument department;

		[SimplComposite]
		[MmName("bestseller_list_rank")]
		private AmazonList bestsellerListRank;

		[SimplCollection("amazon_product")]
		[MmName("people_also_buy")]
		private List<AmazonProduct> peopleAlsoBuy;

		[SimplCollection("compound_document")]
		[MmName("list_mania")]
		private List<CompoundDocument> listMania;

		public AmazonProduct()
		{ }

		public AmazonProduct(MetaMetadataCompositeField mmd) : base(mmd) { }


		public CompoundDocument Department
		{
			get{return department;}
			set
			{
				if (this.department != value)
				{
					this.department = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public AmazonList BestsellerListRank
		{
			get{return bestsellerListRank;}
			set
			{
				if (this.bestsellerListRank != value)
				{
					this.bestsellerListRank = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<AmazonProduct> PeopleAlsoBuy
		{
			get{return peopleAlsoBuy;}
			set
			{
				if (this.peopleAlsoBuy != value)
				{
					this.peopleAlsoBuy = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<CompoundDocument> ListMania
		{
			get{return listMania;}
			set
			{
				if (this.listMania != value)
				{
					this.listMania = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
