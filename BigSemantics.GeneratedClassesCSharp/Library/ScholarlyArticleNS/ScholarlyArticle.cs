//
// ScholarlyArticle.cs
// s.im.pl serialization
//
// Generated by MetaMetadataDotNetTranslator.
// Copyright 2014 Interface Ecology Lab. 
//


using Ecologylab.Collections;
using Ecologylab.Semantics.Generated.Library.CreativeWorkNS;
using Ecologylab.Semantics.Generated.Library.PeriodicalNS;
using Ecologylab.Semantics.MetaMetadataNS;
using Ecologylab.Semantics.MetadataNS;
using Ecologylab.Semantics.MetadataNS.Builtins;
using Ecologylab.Semantics.MetadataNS.Scalar;
using Simpl.Fundamental.Generic;
using Simpl.Serialization;
using Simpl.Serialization.Attributes;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Ecologylab.Semantics.Generated.Library.ScholarlyArticleNS 
{
	[SimplInherit]
	public class ScholarlyArticle : CreativeWork
	{
		/// <summary>
		/// Metadata related to where this article was published.
		/// </summary>
		[SimplComposite]
		[MmName("source")]
		private Periodical source;

		/// <summary>
		/// The Classifications of this paper.
		/// </summary>
		[SimplCollection]
		[SimplScope("repository_documents")]
		[MmName("classifications")]
		private List<Document> classifications;

		/// <summary>
		/// Key Terms of the paper.
		/// </summary>
		[SimplCollection("document")]
		[MmName("keywords")]
		private List<Document> keywords;

		[SimplScalar]
		private MetadataString pages;

		public ScholarlyArticle()
		{ }

		public ScholarlyArticle(MetaMetadataCompositeField mmd) : base(mmd) { }


		public Periodical Source
		{
			get{return source;}
			set
			{
				if (this.source != value)
				{
					this.source = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Document> Classifications
		{
			get{return classifications;}
			set
			{
				if (this.classifications != value)
				{
					this.classifications = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public List<Document> Keywords
		{
			get{return keywords;}
			set
			{
				if (this.keywords != value)
				{
					this.keywords = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}

		public MetadataString Pages
		{
			get{return pages;}
			set
			{
				if (this.pages != value)
				{
					this.pages = value;
					// TODO we need to implement our property change notification mechanism.
				}
			}
		}
	}
}
